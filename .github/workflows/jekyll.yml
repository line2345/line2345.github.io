# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.207.0
        with:
          ruby-version: '2.7' # 使用更现代但广泛兼容的版本
          bundler-cache: false # 禁用缓存，手动处理依赖

      - name: Update dependencies
        run: |
          # 备份原始文件
          cp Gemfile Gemfile.backup || true
          cp Gemfile.lock Gemfile.lock.backup || true
          
          # 删除 Gemfile.lock 以便重新生成
          rm -f Gemfile.lock
          
          # 更新 listen gem 版本，如果存在
          if grep -q "gem 'listen'" Gemfile; then
            sed -i "s/gem 'listen'.*$/gem 'listen', '~> 3.7.0'/" Gemfile
          elif grep -q 'gem "listen"' Gemfile; then
            sed -i 's/gem "listen".*$/gem "listen", "~> 3.7.0"/' Gemfile
          else
            echo "gem 'listen', '~> 3.7.0'" >> Gemfile
          fi
          
          # 确保安装正确版本的 bundler
          gem install bundler -v "~> 2.3.0"
          
          # 安装依赖
          bundle install

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4